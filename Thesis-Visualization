{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":8785613,"sourceType":"datasetVersion","datasetId":5281669}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/mimino12/thesis-visualization?scriptVersionId=186996697\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"4408400e-7e8e-40ea-9040-a2e2466ddd33","_cell_guid":"594cb714-2573-4d8a-a6c5-a47518f13742","collapsed":false,"execution":{"iopub.status.busy":"2024-06-25T18:35:37.83461Z","iopub.execute_input":"2024-06-25T18:35:37.834984Z","iopub.status.idle":"2024-06-25T18:35:39.585986Z","shell.execute_reply.started":"2024-06-25T18:35:37.834952Z","shell.execute_reply":"2024-06-25T18:35:39.584597Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# **Visualization of Preprocessed Text data**","metadata":{"_uuid":"d45c5241-8cbe-47f5-a6f3-4e16f320c9a6","_cell_guid":"e0471e27-e442-420e-92d9-3355001dd96f","trusted":true}},{"cell_type":"code","source":"import mne\nimport os\nimport matplotlib.pyplot as plt\n\n# Define your directory path containing the '-epo.fif' files\ndirectory_path = '/kaggle/input/preproccesed-dataset/3-channel-resting/kaggle/working'\noutput_directory = '/kaggle/working/visual_output_preproccessed_text_data'  # Output directory to save visualizations\n\n# Create the output directory if it doesn't exist\nos.makedirs(output_directory, exist_ok=True)\n\n# Initialize an empty list to store epochs\nall_epochs = []\n\n# Loop through each file in the directory\nfor file_name in os.listdir(directory_path):\n    if file_name.endswith('-epo.fif'):\n        file_path = os.path.join(directory_path, file_name)\n        \n        # Load the epochs\n        epochs = mne.read_epochs(file_path, preload=True)\n        \n        # Apply preprocessing, e.g., filtering\n        epochs.filter(1., 40., fir_design='firwin')\n        \n        # Attempt to set a standard montage\n        try:\n            montage = mne.channels.make_standard_montage('standard_1020')\n            epochs.set_montage(montage)\n        except Exception as e:\n            print(f\"Could not set montage for {file_name}: {e}\")\n\n        # Print channel information for debugging\n        print(f\"Channel info for {file_name}:\")\n        for ch in epochs.info['chs']:\n            print(f\"  {ch['ch_name']}: loc = {ch['loc']}\")\n\n        # Append the epochs to the list\n        all_epochs.append(epochs)\n\n# Optionally, concatenate all epochs into a single object\nall_epochs_concatenated = mne.concatenate_epochs(all_epochs)\n\n# Plot the evoked responses for each individual epoch and save them\nfor i, epochs in enumerate(all_epochs):\n    evoked = epochs.average()\n    fig = evoked.plot(show=False)\n    fig.suptitle(f'Evoked Response {i+1}', y=1.05)  # Add title above the plot\n    fig_path = os.path.join(output_directory, f'evoked_response_{i+1}.png')\n    fig.savefig(fig_path)\n    plt.close(fig)\n\n# Compute the grand average\ngrand_average = mne.grand_average([epochs.average() for epochs in all_epochs])\n\n# Print channel info for grand average\nprint(\"Grand average channel info:\")\nfor ch in grand_average.info['chs']:\n    print(f\"  {ch['ch_name']}: loc = {ch['loc']}\")\n\n# Check if channel locations are available before plotting spatial colors\nif all(ch['loc'].any() for ch in grand_average.info['chs']):\n    fig = grand_average.plot(spatial_colors=True, show=False)\n    fig.suptitle('Grand Average Evoked Response', y=1.05)\n    fig_path = os.path.join(output_directory, 'grand_average_evoked_response.png')\n    fig.savefig(fig_path)\n    plt.close(fig)\nelse:\n    print(\"Channel locations not available. Skipping spatial colors plot.\")\n\n# Create a topomap for a specific time point (e.g., 100 ms) and save it\nif all(ch['loc'].any() for ch in grand_average.info['chs']):\n    fig, ax = plt.subplots()\n    grand_average.plot_topomap(times=0.1, ch_type='eeg', axes=ax, show=False)\n    fig.suptitle('Topographic Map at 100 ms')\n    fig_path = os.path.join(output_directory, 'topomap_100ms.png')\n    fig.savefig(fig_path)\n    plt.close(fig)\n\n    # Create topomaps for multiple time points and save them\n    fig, axes = plt.subplots(1, 3, figsize=(15, 5))\n    times = [0.1, 0.2, 0.3]\n    for ax, time in zip(axes, times):\n        grand_average.plot_topomap(times=time, ch_type='eeg', axes=ax, show=False)\n    fig.suptitle('Topographic Maps')\n    fig_path = os.path.join(output_directory, 'topographic_maps.png')\n    fig.savefig(fig_path)\n    plt.close(fig)\nelse:\n    print(\"Channel locations not available. Skipping topomap plots.\")\n\n# Interactive epochs plot (save static image, as interactive plots cannot be saved)\nfig = all_epochs_concatenated.plot(n_epochs=5, n_channels=10, show=False)\nfig_path = os.path.join(output_directory, 'interactive_epochs_plot.png')\nfig.savefig(fig_path)\nplt.close(fig)\n\nprint(\"Plots have been saved successfully.\")","metadata":{"_uuid":"d359e612-4d29-429c-92f8-721b33dba935","_cell_guid":"2728739e-41cb-4266-9168-5299f7cb0d75","collapsed":false,"execution":{"iopub.status.busy":"2024-06-25T19:27:34.946454Z","iopub.execute_input":"2024-06-25T19:27:34.947206Z","iopub.status.idle":"2024-06-25T19:28:30.380761Z","shell.execute_reply.started":"2024-06-25T19:27:34.947166Z","shell.execute_reply":"2024-06-25T19:28:30.379067Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import mne\nimport os\nimport matplotlib.pyplot as plt\n\n# Define your directory path containing the '-epo.fif' files\ndirectory_path = '/kaggle/input/preproccesed-dataset/3-channel-resting/kaggle/working'\noutput_directory = '/kaggle/working/visual_output_preproccessed_text_data'  # Output directory to save visualizations\n\n# Create the output directory if it doesn't exist\nos.makedirs(output_directory, exist_ok=True)\n\n# Initialize an empty list to store epochs\nall_epochs = []\n\n# Loop through each file in the directory\nfor file_name in os.listdir(directory_path):\n    if file_name.endswith('-epo.fif'):\n        file_path = os.path.join(directory_path, file_name)\n        \n        # Load the epochs\n        epochs = mne.read_epochs(file_path, preload=True)\n        \n        # Apply preprocessing, e.g., filtering\n        epochs.filter(1., 40., fir_design='firwin')\n\n        # Apply a standard montage\n        try:\n            montage = mne.channels.make_standard_montage('standard_1020')\n            epochs.set_montage(montage)\n        except Exception as e:\n            print(f\"Could not set montage for {file_name}: {e}\")\n\n        # Print channel information for debugging\n        print(f\"Channel info for {file_name}:\")\n        for ch in epochs.info['chs']:\n            print(f\"  {ch['ch_name']}: loc = {ch['loc']}\")\n\n        # Append the epochs to the list\n        all_epochs.append(epochs)\n\n# Optionally, concatenate all epochs into a single object\nall_epochs_concatenated = mne.concatenate_epochs(all_epochs)\n\n# Plot the evoked responses for each individual epoch and save them\nfor i, epochs in enumerate(all_epochs):\n    evoked = epochs.average()\n    fig = evoked.plot(show=True)\n    fig.suptitle(f'Evoked Response {i+1}', y=1.05)  # Add title above the plot\n    fig_path = os.path.join(output_directory, f'evoked_response_{i+1}.png')\n    fig.savefig(fig_path)\n    plt.close(fig)\n\n# Compute the grand average\ngrand_average = mne.grand_average([epochs.average() for epochs in all_epochs])\n\n# Print channel info for grand average\nprint(\"Grand average channel info:\")\nfor ch in grand_average.info['chs']:\n    print(f\"  {ch['ch_name']}: loc = {ch['loc']}\")\n\n# Check if channel locations are available before plotting spatial colors\nif all(~np.isnan(ch['loc'][0]) for ch in grand_average.info['chs']):\n    fig = grand_average.plot(spatial_colors=True, show=True)\n    fig.suptitle('Grand Average Evoked Response', y=1.05)\n    fig_path = os.path.join(output_directory, 'grand_average_evoked_response.png')\n    fig.savefig(fig_path)\n    plt.close(fig)\nelse:\n    print(\"Channel locations not available. Skipping spatial colors plot.\")\n\n# Create a topomap for a specific time point (e.g., 100 ms) and save it\nif all(~np.isnan(ch['loc'][0]) for ch in grand_average.info['chs']):\n    fig, ax = plt.subplots()\n    grand_average.plot_topomap(times=0.1, ch_type='eeg', axes=ax, show=True)\n    fig.suptitle('Topographic Map at 100 ms')\n    fig_path = os.path.join(output_directory, 'topomap_100ms.png')\n    fig.savefig(fig_path)\n    plt.close(fig)\n\n    # Create topomaps for multiple time points and save them\n    fig, axes = plt.subplots(1, 3, figsize=(15, 5))\n    times = [0.1, 0.2, 0.3]\n    for ax, time in zip(axes, times):\n        grand_average.plot_topomap(times=time, ch_type='eeg', axes=ax, show=True)\n    fig.suptitle('Topographic Maps')\n    fig_path = os.path.join(output_directory, 'topographic_maps.png')\n    fig.savefig(fig_path)\n    plt.close(fig)\nelse:\n    print(\"Channel locations not available. Skipping topomap plots.\")\n\n# Interactive epochs plot (save static image, as interactive plots cannot be saved)\nfig = all_epochs_concatenated.plot(n_epochs=5, n_channels=10, show=True)\nfig_path = os.path.join(output_directory, 'interactive_epochs_plot.png')\nfig.savefig(fig_path)\nplt.close(fig)\n\nprint(\"Plots have been saved successfully.\")","metadata":{"_uuid":"0f08d68c-e5cb-4d61-88c8-c0d38b69dbb2","_cell_guid":"7a9299e7-4625-4aac-9494-4e28eee6453c","collapsed":false,"execution":{"iopub.status.busy":"2024-06-25T19:46:30.403153Z","iopub.execute_input":"2024-06-25T19:46:30.403586Z","iopub.status.idle":"2024-06-25T20:04:41.858388Z","shell.execute_reply.started":"2024-06-25T19:46:30.403553Z","shell.execute_reply":"2024-06-25T20:04:41.85709Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# **ERP-VISUALIZATION**","metadata":{"_uuid":"bbbbeaf4-3c9a-4a83-a1ce-ca73562cceac","_cell_guid":"a9aa1918-69fe-4d7d-96cc-f3d68dd7026a","trusted":true}},{"cell_type":"code","source":"import mne\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport os\n\n# Set up the data directory and output directory\ndata_dir = '/kaggle/input/preproccesed-dataset/128-channel-ERP/kaggle/working/preprocessed_raw_output_directory'  # Adjust this path\noutput_dir = '/kaggle/working/visual_output_preproccessed_raw_ERP_data'  # Adjust this path\n\n# Create output directory if it doesn't exist\nos.makedirs(output_dir, exist_ok=True)\n\n# Get a list of all .fif files in the directory\nfile_paths = [os.path.join(data_dir, f) for f in os.listdir(data_dir) if f.endswith('-epo.fif')]\n\n# Initialize a list to hold the loaded epochs\nepochs_list = []\n\n# Load each file\nfor file_path in file_paths:\n    try:\n        epochs = mne.read_epochs(file_path)\n        if len(epochs) > 0:  # Check if epochs object is not empty\n            epochs_list.append(epochs)\n        else:\n            print(f'Warning: {file_path} is empty and will be skipped.')\n    except Exception as e:\n        print(f'Error loading {file_path}: {e}')\n\n# Check if epochs_list is not empty before concatenation\nif epochs_list:\n    # Concatenate all epochs\n    epochs = mne.concatenate_epochs(epochs_list)\n    \n    # Apply baseline correction\n    epochs.apply_baseline((None, 0))\n    \n    # Filter data\n    epochs.filter(l_freq=1.0, h_freq=40.0)\n    \n    # Plotting and saving raw epochs\n    raw_fig = epochs.plot(n_epochs=5, n_channels=10, picks='eeg', show=False)\n    raw_fig.savefig(os.path.join(output_dir, 'raw_epochs.png'))\n    \n    # Plotting and saving ERP/ERF\n    erp_fig = epochs.average().plot(show=False)\n    erp_fig.savefig(os.path.join(output_dir, 'erp.png'))\n    \n    # Compute PSD and save the plot with color\n    psd = epochs.compute_psd()\n    psd_fig = psd.plot(show=False, spatial_colors=True)  # Enable spatial colors\n    psd_fig.savefig(os.path.join(output_dir, 'psd.png'))  # Save the figure\n\n    # Check if channel locations are available for topomap plotting\n    if epochs.info['chs'][0]['loc'][:3].any():  # Check if channel location data is present\n        # Plotting and saving Topomap for a specific time point\n        times = np.linspace(0, 0.3, 5)  # Example time points\n        topomap_fig = epochs.average().plot_topomap(times=times, ch_type='eeg', show=False)\n        topomap_fig.figure.savefig(os.path.join(output_dir, 'topomap.png'))\n    else:\n        print('Channel locations not available, skipping topomap plot.')\n\n    plt.show()\nelse:\n    print('No valid epochs to concatenate.')","metadata":{"_uuid":"718b13f2-af91-402c-9f10-18c9029688cf","_cell_guid":"3ae2bd62-1414-4d0f-8812-f0b0371efbc5","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import mne\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport os\n\n# Set up the data directory and output directory\ndata_dir = '/kaggle/input/preproccesed-dataset/128-channel-ERP/kaggle/working/preprocessed_raw_output_directory'  # Adjust this path\noutput_dir = '/kaggle/working/visual_output_preproccessed_raw_ERP_data'  # Adjust this path\n\n# Create output directory if it doesn't exist\nos.makedirs(output_dir, exist_ok=True)\n\n# Get a list of all .fif files in the directory\nfile_paths = [os.path.join(data_dir, f) for f in os.listdir(data_dir) if f.endswith('-epo.fif')]\n\n# Initialize a list to hold the loaded epochs\nepochs_list = []\n\n# Load each file\nfor file_path in file_paths:\n    try:\n        epochs = mne.read_epochs(file_path)\n        if len(epochs) > 0:  # Check if epochs object is not empty\n            epochs_list.append(epochs)\n        else:\n            print(f'Warning: {file_path} is empty and will be skipped.')\n    except Exception as e:\n        print(f'Error loading {file_path}: {e}')\n\n# Check if epochs_list is not empty before concatenation\nif epochs_list:\n    # Concatenate all epochs\n    epochs = mne.concatenate_epochs(epochs_list)\n    \n    # Apply baseline correction\n    epochs.apply_baseline((None, 0))\n    \n    # Filter data\n    epochs.filter(l_freq=1.0, h_freq=40.0)\n    \n    # Plotting and saving raw epochs\n    raw_fig = epochs.plot(n_epochs=5, n_channels=10, picks='eeg', show=False)\n    raw_fig.savefig(os.path.join(output_dir, 'raw_epochs.png'))\n    \n    # Plotting and saving ERP/ERF\n    erp_fig = epochs.average().plot(show=False)\n    erp_fig.savefig(os.path.join(output_dir, 'erp.png'))\n    \n    # Compute PSD and save the plot with color if channel locations are available\n    if epochs.info['chs'][0]['loc'] is not None:  # Check if channel location data is present\n        psd = epochs.compute_psd()\n        psd_fig = psd.plot(show=False, spatial_colors=True)  # Enable spatial colors if possible\n        psd_fig.savefig(os.path.join(output_dir, 'psd.png'))  # Save the figure\n\n        # Plotting and saving Topomap for a specific time point\n        times = np.linspace(0, 0.3, 5)  # Example time points\n        topomap_fig = epochs.plot_topomap(times=times, ch_type='eeg', show=False)\n        topomap_fig.savefig(os.path.join(output_dir, 'topomap.png'))\n    else:\n        print('Channel locations not available, skipping PSD and topomap plots.')\n\n    plt.show()\nelse:\n    print('No valid epochs to concatenate.')","metadata":{"_uuid":"61b2fbd4-7e09-4c52-8c5c-be52c238bc58","_cell_guid":"6ceb726e-485f-4004-b36a-c0e732a53d3c","collapsed":false,"execution":{"iopub.status.busy":"2024-06-27T10:44:58.197333Z","iopub.execute_input":"2024-06-27T10:44:58.197792Z","iopub.status.idle":"2024-06-27T10:45:04.391153Z","shell.execute_reply.started":"2024-06-27T10:44:58.19776Z","shell.execute_reply":"2024-06-27T10:45:04.389168Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"epochs.plot_drop_log()","metadata":{"_uuid":"6cbc0b3c-6c42-4842-980e-c1f5d6e65050","_cell_guid":"6db482d2-5f14-456a-9298-90b93ecb35ab","collapsed":false,"execution":{"iopub.status.busy":"2024-06-27T10:38:31.95976Z","iopub.execute_input":"2024-06-27T10:38:31.960214Z","iopub.status.idle":"2024-06-27T10:38:32.596356Z","shell.execute_reply.started":"2024-06-27T10:38:31.960182Z","shell.execute_reply":"2024-06-27T10:38:32.594803Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# **128-CHANNEL-PREPROCCESSED-MAT-VISUALIZATION**","metadata":{"_uuid":"f7233940-7f53-43d8-9bd4-a76f1a48a40f","_cell_guid":"42d787d9-d590-4de3-80df-34457ac72020","trusted":true}},{"cell_type":"code","source":"import matplotlib.pyplot as plt","metadata":{"execution":{"iopub.status.busy":"2024-06-27T17:16:08.471198Z","iopub.execute_input":"2024-06-27T17:16:08.471709Z","iopub.status.idle":"2024-06-27T17:16:08.475771Z","shell.execute_reply.started":"2024-06-27T17:16:08.471679Z","shell.execute_reply":"2024-06-27T17:16:08.474844Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import mne\nimport os\nimport numpy as np\n\n# Define the directory where your .fif files are stored\ndata_dir = '/kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory'\n\n# List all .fif files in the directory\nfif_files = [f for f in os.listdir(data_dir) if f.endswith('-epo.fif')]\n\n# Load each .fif file\nepochs_list = [mne.read_epochs(os.path.join(data_dir, fif_file)) for fif_file in fif_files]\n\n# Concatenate all epochs into a single Epochs object\nall_epochs = mne.concatenate_epochs(epochs_list)\n\n# Preprocessing\nall_epochs.filter(l_freq=1.0, h_freq=40.0)\n\n# Perform ICA\nica = mne.preprocessing.ICA(n_components=20, random_state=97)\nica.fit(all_epochs)\nica.plot_components()\nica.exclude = [0, 1]  # Example: exclude components 0 and 1\nall_epochs = ica.apply(all_epochs)\n\n# Plot evoked responses\nevoked = all_epochs.average()\nevoked.plot()\n\n# Plot PSD\nall_epochs.plot_psd(fmin=1.0, fmax=40.0)\n\n# Plot topographic maps\nevoked.plot_topomap(times=[0.1, 0.2, 0.3], ch_type='eeg')\n\n# Compute and plot TFR\nfrom mne.time_frequency import tfr_morlet\nfreqs = np.arange(6, 30, 3)\nn_cycles = freqs / 2.\npower = tfr_morlet(all_epochs, freqs=freqs, n_cycles=n_cycles, return_itc=False, average=True)\npower.plot([0])\n\n# Save processed data\nall_epochs.save('/kaggle/working/processed-epochs.fif', overwrite=True)\nevoked.save('/kaggle/working/evoked-ave.fif', overwrite=True)","metadata":{"_uuid":"f84de506-776b-4e99-9c4e-7bce8f6f29c8","_cell_guid":"49603b94-5427-4573-b480-863dc22c1f31","collapsed":false,"execution":{"iopub.status.busy":"2024-06-27T12:41:08.786914Z","iopub.execute_input":"2024-06-27T12:41:08.787188Z","iopub.status.idle":"2024-06-27T12:49:38.427417Z","shell.execute_reply.started":"2024-06-27T12:41:08.787165Z","shell.execute_reply":"2024-06-27T12:49:38.426022Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":" !pip install -U mne","metadata":{"_uuid":"61086385-6740-4173-a935-729f34c32009","_cell_guid":"2aaa8673-5989-4b62-87c5-9243e8fb48cf","collapsed":false,"execution":{"iopub.status.busy":"2024-06-27T13:31:29.746152Z","iopub.execute_input":"2024-06-27T13:31:29.746538Z","iopub.status.idle":"2024-06-27T13:31:47.548801Z","shell.execute_reply.started":"2024-06-27T13:31:29.74651Z","shell.execute_reply":"2024-06-27T13:31:47.547613Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import matplotlib.pyplot as plt","metadata":{"execution":{"iopub.status.busy":"2024-07-05T16:00:02.084045Z","iopub.execute_input":"2024-07-05T16:00:02.084666Z","iopub.status.idle":"2024-07-05T16:00:02.08899Z","shell.execute_reply.started":"2024-07-05T16:00:02.084634Z","shell.execute_reply":"2024-07-05T16:00:02.08801Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"import mne\nimport os\nimport numpy as np\n\n# Define the directory where your .fif files are stored\ndata_dir = '/kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory'\n\n# List all .fif files in the directory\nfif_files = [f for f in os.listdir(data_dir) if f.endswith('-epo.fif')]\n\n# Load each .fif file\nepochs_list = [mne.read_epochs(os.path.join(data_dir, fif_file)) for fif_file in fif_files]\n\n# Concatenate all epochs into a single Epochs object\nall_epochs = mne.concatenate_epochs(epochs_list)\n\n# Preprocessing: Apply a high-pass filter\nall_epochs.filter(l_freq=1.0, h_freq=40.0)\n\n# Perform ICA\nica = mne.preprocessing.ICA(n_components=20, random_state=97)\nica.fit(all_epochs)\n\n# Exclude components manually based on inspection or automated criteria\nica.exclude = [0, 1]  # Adjust based on identified artifact components\n\n# Apply ICA to epochs\nall_epochs = ica.apply(all_epochs)\n\n# Plot evoked responses\nevoked = all_epochs.average()\nevoked.plot()\n\n# Plot PSD\npsd = all_epochs.compute_psd(fmin=1.0, fmax=40.0)\nfig_psd = psd.plot(average=True, spatial_colors=False)\n\n# Plot topographic maps\n# fig_topo = evoked.plot_topomap(times=[0.1, 0.2, 0.3], ch_type='eeg')\ntry:\n    fig_topo = evoked.plot_topomap(times=[0.1, 0.2, 0.3], ch_type='eeg')\nexcept Exception as e:\n    print(f\"Error in plot_topomap: {e}\")\n\n# Compute and plot TFR\nfrom mne.time_frequency import tfr_morlet\nfreqs = np.arange(6, 30, 3)\nn_cycles = freqs / 2\npower = tfr_morlet(all_epochs, freqs=freqs, n_cycles=n_cycles, return_itc=False, average=True)\nfig_tfr = power.plot([0])\n\n# Ensure the save directory exists\nsave_dir = '/kaggle/working/mat_visuals/'\nos.makedirs(save_dir, exist_ok=True)  # Create directory if it doesn't exist\n\n# Save processed data\nall_epochs.save(os.path.join(save_dir, 'processed-epochs.fif'), overwrite=True)\nevoked.save(os.path.join(save_dir, 'evoked-ave.fif'), overwrite=True)\n\n# Save figures if needed\nfig_psd.savefig(os.path.join(save_dir, 'psd_plot.png'))\nfig_topo.plt.savefig(os.path.join(save_dir, 'topomap_plot.png'))\nfig_tfr.plt.savefig(os.path.join(save_dir, 'tfr_plot.png'))\n","metadata":{"_uuid":"132c005f-60c1-430e-9ad6-0acd9f3c020f","_cell_guid":"345845e4-13ac-4048-a34a-49329a2bc34b","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-07-05T16:00:39.556113Z","iopub.execute_input":"2024-07-05T16:00:39.556462Z","iopub.status.idle":"2024-07-05T16:23:30.889002Z","shell.execute_reply.started":"2024-07-05T16:00:39.556435Z","shell.execute_reply":"2024-07-05T16:23:30.887659Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"Reading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010006rest 20150528 0928.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n313 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02020016rest 20150701 1040.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02020027rest 20150713 1049.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n331 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010010rest 20150624 1447.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02020013rest 20150629 1607.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n300 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02020018rest 20150702 1651.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02030004_rest 20151026 1930-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010034rest 20160407 0938.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010016rest 20150710 1220.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n300 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010015rest 20150709 1456.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n301 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02020010rest 20150625 1224.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n303 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02030017_rest 20151208 1329-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010019rest 20150716 1440.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n300 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010036_rest 20160408 1418-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010023rest 20150729 1929.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010026rest 20160311 1421.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010018rest 20150716 1237.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n300 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02030002rest_new 20151022 1-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n301 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02030018_rest 20151208 1443-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02030006_rest 20151103 1725-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n301 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010022restnew 20150724 14-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n300 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010004rest 20150427 1335.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n300 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02020015_rest 20150630 1527-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02030005rest 20151026 2103.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010013rest 20150703 1333.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010030rest 20160324 1054.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n300 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02020019rest 20150703 1036.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02030021rest 20160105 1141.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n300 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02030007_rest 20151103 2032-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n302 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010005rest 20150507 0907.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n300 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02030019_rest 20151230 1314-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010008_rest 20150619 1653-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n329 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010033rest 20160331 1239.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n300 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010011rest 20150625 1516.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010024rest 20150814 1504.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n300 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02020025rest 20150713 1519.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n334 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02020023restnew 20150709 10-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n300 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010028rest 20160317 1538.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02020029rest 20150715 1316.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02020022rest 20150707 1452.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010002rest 20150416 1017.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02020026_rest 20150714 1413-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02020008rest 20150624 1711.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02030009_rest 20151105 1113-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02020020rest 20150703 1754.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n300 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02030014rest 20151117 1441.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02020021rest 20150707 1720.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02010012rest 20150626 1026.-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02030003_rest 20151022 1155-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n301 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02030020_rest 20151230 1416-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nReading /kaggle/input/preproccesed-dataset/128-channel-resting(2.0)/kaggle/working/preprocessed_mat_output_directory/02020014_rest 20150630 1023-epo.fif ...\nIsotrak not found\n    Found the data of interest:\n        t =    -200.00 ...     800.00 ms\n        0 CTF compensation matrices available\nNot setting metadata\n299 matching events found\nNo baseline correction applied\n0 projection items activated\nNot setting metadata\n15388 matching events found\nApplying baseline correction (mode: mean)\nSetting up band-pass filter from 1 - 40 Hz\n\nFIR filter parameters\n---------------------\nDesigning a one-pass, zero-phase, non-causal bandpass filter:\n- Windowed time-domain design (firwin) method\n- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n- Lower passband edge: 1.00\n- Lower transition bandwidth: 1.00 Hz (-6 dB cutoff frequency: 0.50 Hz)\n- Upper passband edge: 40.00 Hz\n- Upper transition bandwidth: 10.00 Hz (-6 dB cutoff frequency: 45.00 Hz)\n- Filter length: 825 samples (3.300 s)\n\n","output_type":"stream"},{"name":"stderr","text":"/tmp/ipykernel_34/647814798.py:18: RuntimeWarning: filter_length (825) is longer than the signal (251), distortion is likely. Reduce filter length or filter a longer signal.\n  all_epochs.filter(l_freq=1.0, h_freq=40.0)\n[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=1)]: Done  71 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=1)]: Done 161 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=1)]: Done 287 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=1)]: Done 449 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=1)]: Done 647 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=1)]: Done 881 tasks      | elapsed:    0.2s\n[Parallel(n_jobs=1)]: Done 1151 tasks      | elapsed:    0.2s\n[Parallel(n_jobs=1)]: Done 1457 tasks      | elapsed:    0.3s\n[Parallel(n_jobs=1)]: Done 1799 tasks      | elapsed:    0.3s\n[Parallel(n_jobs=1)]: Done 2177 tasks      | elapsed:    0.4s\n[Parallel(n_jobs=1)]: Done 2591 tasks      | elapsed:    0.4s\n[Parallel(n_jobs=1)]: Done 3041 tasks      | elapsed:    0.5s\n[Parallel(n_jobs=1)]: Done 3527 tasks      | elapsed:    0.6s\n[Parallel(n_jobs=1)]: Done 4049 tasks      | elapsed:    0.7s\n[Parallel(n_jobs=1)]: Done 4607 tasks      | elapsed:    0.8s\n[Parallel(n_jobs=1)]: Done 5201 tasks      | elapsed:    0.9s\n[Parallel(n_jobs=1)]: Done 5831 tasks      | elapsed:    1.0s\n[Parallel(n_jobs=1)]: Done 6497 tasks      | elapsed:    1.1s\n[Parallel(n_jobs=1)]: Done 7199 tasks      | elapsed:    1.2s\n[Parallel(n_jobs=1)]: Done 7937 tasks      | elapsed:    1.3s\n[Parallel(n_jobs=1)]: Done 8711 tasks      | elapsed:    1.5s\n[Parallel(n_jobs=1)]: Done 9521 tasks      | elapsed:    1.6s\n[Parallel(n_jobs=1)]: Done 10367 tasks      | elapsed:    1.8s\n[Parallel(n_jobs=1)]: Done 11249 tasks      | elapsed:    1.9s\n[Parallel(n_jobs=1)]: Done 12167 tasks      | elapsed:    2.1s\n[Parallel(n_jobs=1)]: Done 13121 tasks      | elapsed:    2.2s\n[Parallel(n_jobs=1)]: Done 14111 tasks      | elapsed:    2.4s\n[Parallel(n_jobs=1)]: Done 15137 tasks      | elapsed:    2.6s\n[Parallel(n_jobs=1)]: Done 16199 tasks      | elapsed:    2.7s\n[Parallel(n_jobs=1)]: Done 17297 tasks      | elapsed:    2.9s\n[Parallel(n_jobs=1)]: Done 18431 tasks      | elapsed:    3.1s\n[Parallel(n_jobs=1)]: Done 19601 tasks      | elapsed:    3.3s\n[Parallel(n_jobs=1)]: Done 20807 tasks      | elapsed:    3.5s\n[Parallel(n_jobs=1)]: Done 22049 tasks      | elapsed:    3.8s\n[Parallel(n_jobs=1)]: Done 23327 tasks      | elapsed:    4.0s\n[Parallel(n_jobs=1)]: Done 24641 tasks      | elapsed:    4.2s\n[Parallel(n_jobs=1)]: Done 25991 tasks      | elapsed:    4.4s\n[Parallel(n_jobs=1)]: Done 27377 tasks      | elapsed:    4.7s\n[Parallel(n_jobs=1)]: Done 28799 tasks      | elapsed:    4.9s\n[Parallel(n_jobs=1)]: Done 30257 tasks      | elapsed:    5.2s\n[Parallel(n_jobs=1)]: Done 31751 tasks      | elapsed:    5.4s\n[Parallel(n_jobs=1)]: Done 33281 tasks      | elapsed:    5.7s\n[Parallel(n_jobs=1)]: Done 34847 tasks      | elapsed:    6.0s\n[Parallel(n_jobs=1)]: Done 36449 tasks      | elapsed:    6.2s\n[Parallel(n_jobs=1)]: Done 38087 tasks      | elapsed:    6.5s\n[Parallel(n_jobs=1)]: Done 39761 tasks      | elapsed:    6.8s\n[Parallel(n_jobs=1)]: Done 41471 tasks      | elapsed:    7.1s\n[Parallel(n_jobs=1)]: Done 43217 tasks      | elapsed:    7.4s\n[Parallel(n_jobs=1)]: Done 44999 tasks      | elapsed:    7.7s\n[Parallel(n_jobs=1)]: Done 46817 tasks      | elapsed:    8.0s\n[Parallel(n_jobs=1)]: Done 48671 tasks      | elapsed:    8.3s\n[Parallel(n_jobs=1)]: Done 50561 tasks      | elapsed:    8.6s\n[Parallel(n_jobs=1)]: Done 52487 tasks      | elapsed:    8.9s\n[Parallel(n_jobs=1)]: Done 54449 tasks      | elapsed:    9.2s\n[Parallel(n_jobs=1)]: Done 56447 tasks      | elapsed:    9.6s\n[Parallel(n_jobs=1)]: Done 58481 tasks      | elapsed:    9.9s\n[Parallel(n_jobs=1)]: Done 60551 tasks      | elapsed:   10.3s\n[Parallel(n_jobs=1)]: Done 62657 tasks      | elapsed:   10.7s\n[Parallel(n_jobs=1)]: Done 64799 tasks      | elapsed:   11.0s\n[Parallel(n_jobs=1)]: Done 66977 tasks      | elapsed:   11.4s\n[Parallel(n_jobs=1)]: Done 69191 tasks      | elapsed:   11.8s\n[Parallel(n_jobs=1)]: Done 71441 tasks      | elapsed:   12.2s\n[Parallel(n_jobs=1)]: Done 73727 tasks      | elapsed:   12.6s\n[Parallel(n_jobs=1)]: Done 76049 tasks      | elapsed:   12.9s\n[Parallel(n_jobs=1)]: Done 78407 tasks      | elapsed:   13.3s\n[Parallel(n_jobs=1)]: Done 80801 tasks      | elapsed:   13.8s\n[Parallel(n_jobs=1)]: Done 83231 tasks      | elapsed:   14.2s\n[Parallel(n_jobs=1)]: Done 85697 tasks      | elapsed:   14.6s\n[Parallel(n_jobs=1)]: Done 88199 tasks      | elapsed:   15.0s\n[Parallel(n_jobs=1)]: Done 90737 tasks      | elapsed:   15.5s\n[Parallel(n_jobs=1)]: Done 93311 tasks      | elapsed:   15.9s\n[Parallel(n_jobs=1)]: Done 95921 tasks      | elapsed:   16.3s\n[Parallel(n_jobs=1)]: Done 98567 tasks      | elapsed:   16.8s\n[Parallel(n_jobs=1)]: Done 101249 tasks      | elapsed:   17.3s\n[Parallel(n_jobs=1)]: Done 103967 tasks      | elapsed:   17.8s\n[Parallel(n_jobs=1)]: Done 106721 tasks      | elapsed:   18.2s\n[Parallel(n_jobs=1)]: Done 109511 tasks      | elapsed:   18.7s\n[Parallel(n_jobs=1)]: Done 112337 tasks      | elapsed:   19.2s\n[Parallel(n_jobs=1)]: Done 115199 tasks      | elapsed:   19.7s\n[Parallel(n_jobs=1)]: Done 118097 tasks      | elapsed:   20.2s\n[Parallel(n_jobs=1)]: Done 121031 tasks      | elapsed:   20.7s\n[Parallel(n_jobs=1)]: Done 124001 tasks      | elapsed:   21.2s\n[Parallel(n_jobs=1)]: Done 127007 tasks      | elapsed:   21.7s\n[Parallel(n_jobs=1)]: Done 130049 tasks      | elapsed:   22.2s\n[Parallel(n_jobs=1)]: Done 133127 tasks      | elapsed:   22.8s\n[Parallel(n_jobs=1)]: Done 136241 tasks      | elapsed:   23.4s\n[Parallel(n_jobs=1)]: Done 139391 tasks      | elapsed:   23.9s\n[Parallel(n_jobs=1)]: Done 142577 tasks      | elapsed:   24.5s\n[Parallel(n_jobs=1)]: Done 145799 tasks      | elapsed:   25.0s\n[Parallel(n_jobs=1)]: Done 149057 tasks      | elapsed:   25.6s\n[Parallel(n_jobs=1)]: Done 152351 tasks      | elapsed:   26.2s\n[Parallel(n_jobs=1)]: Done 155681 tasks      | elapsed:   26.7s\n[Parallel(n_jobs=1)]: Done 159047 tasks      | elapsed:   27.3s\n[Parallel(n_jobs=1)]: Done 162449 tasks      | elapsed:   27.9s\n[Parallel(n_jobs=1)]: Done 165887 tasks      | elapsed:   28.5s\n[Parallel(n_jobs=1)]: Done 169361 tasks      | elapsed:   29.1s\n[Parallel(n_jobs=1)]: Done 172871 tasks      | elapsed:   29.7s\n[Parallel(n_jobs=1)]: Done 176417 tasks      | elapsed:   30.3s\n[Parallel(n_jobs=1)]: Done 179999 tasks      | elapsed:   30.9s\n[Parallel(n_jobs=1)]: Done 183617 tasks      | elapsed:   31.5s\n[Parallel(n_jobs=1)]: Done 187271 tasks      | elapsed:   32.1s\n[Parallel(n_jobs=1)]: Done 190961 tasks      | elapsed:   32.7s\n[Parallel(n_jobs=1)]: Done 194687 tasks      | elapsed:   33.4s\n[Parallel(n_jobs=1)]: Done 198449 tasks      | elapsed:   34.0s\n[Parallel(n_jobs=1)]: Done 202247 tasks      | elapsed:   34.7s\n[Parallel(n_jobs=1)]: Done 206081 tasks      | elapsed:   35.3s\n[Parallel(n_jobs=1)]: Done 209951 tasks      | elapsed:   36.0s\n[Parallel(n_jobs=1)]: Done 213857 tasks      | elapsed:   36.6s\n[Parallel(n_jobs=1)]: Done 217799 tasks      | elapsed:   37.3s\n[Parallel(n_jobs=1)]: Done 221777 tasks      | elapsed:   37.9s\n[Parallel(n_jobs=1)]: Done 225791 tasks      | elapsed:   38.6s\n[Parallel(n_jobs=1)]: Done 229841 tasks      | elapsed:   39.3s\n[Parallel(n_jobs=1)]: Done 233927 tasks      | elapsed:   40.0s\n[Parallel(n_jobs=1)]: Done 238049 tasks      | elapsed:   40.7s\n[Parallel(n_jobs=1)]: Done 242207 tasks      | elapsed:   41.4s\n[Parallel(n_jobs=1)]: Done 246401 tasks      | elapsed:   42.1s\n[Parallel(n_jobs=1)]: Done 250631 tasks      | elapsed:   42.9s\n[Parallel(n_jobs=1)]: Done 254897 tasks      | elapsed:   43.6s\n[Parallel(n_jobs=1)]: Done 259199 tasks      | elapsed:   44.3s\n[Parallel(n_jobs=1)]: Done 263537 tasks      | elapsed:   45.1s\n[Parallel(n_jobs=1)]: Done 267911 tasks      | elapsed:   45.8s\n[Parallel(n_jobs=1)]: Done 272321 tasks      | elapsed:   46.6s\n[Parallel(n_jobs=1)]: Done 276767 tasks      | elapsed:   47.3s\n[Parallel(n_jobs=1)]: Done 281249 tasks      | elapsed:   48.1s\n[Parallel(n_jobs=1)]: Done 285767 tasks      | elapsed:   48.8s\n[Parallel(n_jobs=1)]: Done 290321 tasks      | elapsed:   49.6s\n[Parallel(n_jobs=1)]: Done 294911 tasks      | elapsed:   50.4s\n[Parallel(n_jobs=1)]: Done 299537 tasks      | elapsed:   51.1s\n[Parallel(n_jobs=1)]: Done 304199 tasks      | elapsed:   51.9s\n[Parallel(n_jobs=1)]: Done 308897 tasks      | elapsed:   52.7s\n[Parallel(n_jobs=1)]: Done 313631 tasks      | elapsed:   53.6s\n[Parallel(n_jobs=1)]: Done 318401 tasks      | elapsed:   54.4s\n[Parallel(n_jobs=1)]: Done 323207 tasks      | elapsed:   55.3s\n[Parallel(n_jobs=1)]: Done 328049 tasks      | elapsed:   56.1s\n[Parallel(n_jobs=1)]: Done 332927 tasks      | elapsed:   56.9s\n[Parallel(n_jobs=1)]: Done 337841 tasks      | elapsed:   57.7s\n[Parallel(n_jobs=1)]: Done 342791 tasks      | elapsed:   58.6s\n[Parallel(n_jobs=1)]: Done 347777 tasks      | elapsed:   59.4s\n[Parallel(n_jobs=1)]: Done 352799 tasks      | elapsed:  1.0min\n[Parallel(n_jobs=1)]: Done 357857 tasks      | elapsed:  1.0min\n[Parallel(n_jobs=1)]: Done 362951 tasks      | elapsed:  1.0min\n[Parallel(n_jobs=1)]: Done 368081 tasks      | elapsed:  1.0min\n[Parallel(n_jobs=1)]: Done 373247 tasks      | elapsed:  1.1min\n[Parallel(n_jobs=1)]: Done 378449 tasks      | elapsed:  1.1min\n[Parallel(n_jobs=1)]: Done 383687 tasks      | elapsed:  1.1min\n[Parallel(n_jobs=1)]: Done 388961 tasks      | elapsed:  1.1min\n[Parallel(n_jobs=1)]: Done 394271 tasks      | elapsed:  1.1min\n[Parallel(n_jobs=1)]: Done 399617 tasks      | elapsed:  1.1min\n[Parallel(n_jobs=1)]: Done 404999 tasks      | elapsed:  1.1min\n[Parallel(n_jobs=1)]: Done 410417 tasks      | elapsed:  1.2min\n[Parallel(n_jobs=1)]: Done 415871 tasks      | elapsed:  1.2min\n[Parallel(n_jobs=1)]: Done 421361 tasks      | elapsed:  1.2min\n[Parallel(n_jobs=1)]: Done 426887 tasks      | elapsed:  1.2min\n[Parallel(n_jobs=1)]: Done 432449 tasks      | elapsed:  1.2min\n[Parallel(n_jobs=1)]: Done 438047 tasks      | elapsed:  1.2min\n[Parallel(n_jobs=1)]: Done 443681 tasks      | elapsed:  1.3min\n[Parallel(n_jobs=1)]: Done 449351 tasks      | elapsed:  1.3min\n[Parallel(n_jobs=1)]: Done 455057 tasks      | elapsed:  1.3min\n[Parallel(n_jobs=1)]: Done 460799 tasks      | elapsed:  1.3min\n[Parallel(n_jobs=1)]: Done 466577 tasks      | elapsed:  1.3min\n[Parallel(n_jobs=1)]: Done 472391 tasks      | elapsed:  1.3min\n[Parallel(n_jobs=1)]: Done 478241 tasks      | elapsed:  1.4min\n[Parallel(n_jobs=1)]: Done 484127 tasks      | elapsed:  1.4min\n[Parallel(n_jobs=1)]: Done 490049 tasks      | elapsed:  1.4min\n[Parallel(n_jobs=1)]: Done 496007 tasks      | elapsed:  1.4min\n[Parallel(n_jobs=1)]: Done 502001 tasks      | elapsed:  1.4min\n[Parallel(n_jobs=1)]: Done 508031 tasks      | elapsed:  1.4min\n[Parallel(n_jobs=1)]: Done 514097 tasks      | elapsed:  1.5min\n[Parallel(n_jobs=1)]: Done 520199 tasks      | elapsed:  1.5min\n[Parallel(n_jobs=1)]: Done 526337 tasks      | elapsed:  1.5min\n[Parallel(n_jobs=1)]: Done 532511 tasks      | elapsed:  1.5min\n[Parallel(n_jobs=1)]: Done 538721 tasks      | elapsed:  1.5min\n[Parallel(n_jobs=1)]: Done 544967 tasks      | elapsed:  1.5min\n[Parallel(n_jobs=1)]: Done 551249 tasks      | elapsed:  1.6min\n[Parallel(n_jobs=1)]: Done 557567 tasks      | elapsed:  1.6min\n[Parallel(n_jobs=1)]: Done 563921 tasks      | elapsed:  1.6min\n[Parallel(n_jobs=1)]: Done 570311 tasks      | elapsed:  1.6min\n[Parallel(n_jobs=1)]: Done 576737 tasks      | elapsed:  1.6min\n[Parallel(n_jobs=1)]: Done 583199 tasks      | elapsed:  1.7min\n[Parallel(n_jobs=1)]: Done 589697 tasks      | elapsed:  1.7min\n[Parallel(n_jobs=1)]: Done 596231 tasks      | elapsed:  1.7min\n[Parallel(n_jobs=1)]: Done 602801 tasks      | elapsed:  1.7min\n[Parallel(n_jobs=1)]: Done 609407 tasks      | elapsed:  1.7min\n[Parallel(n_jobs=1)]: Done 616049 tasks      | elapsed:  1.7min\n[Parallel(n_jobs=1)]: Done 622727 tasks      | elapsed:  1.8min\n[Parallel(n_jobs=1)]: Done 629441 tasks      | elapsed:  1.8min\n[Parallel(n_jobs=1)]: Done 636191 tasks      | elapsed:  1.8min\n[Parallel(n_jobs=1)]: Done 642977 tasks      | elapsed:  1.8min\n[Parallel(n_jobs=1)]: Done 649799 tasks      | elapsed:  1.8min\n[Parallel(n_jobs=1)]: Done 656657 tasks      | elapsed:  1.9min\n[Parallel(n_jobs=1)]: Done 663551 tasks      | elapsed:  1.9min\n[Parallel(n_jobs=1)]: Done 670481 tasks      | elapsed:  1.9min\n[Parallel(n_jobs=1)]: Done 677447 tasks      | elapsed:  1.9min\n[Parallel(n_jobs=1)]: Done 684449 tasks      | elapsed:  1.9min\n[Parallel(n_jobs=1)]: Done 691487 tasks      | elapsed:  2.0min\n[Parallel(n_jobs=1)]: Done 698561 tasks      | elapsed:  2.0min\n[Parallel(n_jobs=1)]: Done 705671 tasks      | elapsed:  2.0min\n[Parallel(n_jobs=1)]: Done 712817 tasks      | elapsed:  2.0min\n[Parallel(n_jobs=1)]: Done 719999 tasks      | elapsed:  2.0min\n[Parallel(n_jobs=1)]: Done 727217 tasks      | elapsed:  2.1min\n[Parallel(n_jobs=1)]: Done 734471 tasks      | elapsed:  2.1min\n[Parallel(n_jobs=1)]: Done 741761 tasks      | elapsed:  2.1min\n[Parallel(n_jobs=1)]: Done 749087 tasks      | elapsed:  2.1min\n[Parallel(n_jobs=1)]: Done 756449 tasks      | elapsed:  2.1min\n[Parallel(n_jobs=1)]: Done 763847 tasks      | elapsed:  2.2min\n[Parallel(n_jobs=1)]: Done 771281 tasks      | elapsed:  2.2min\n[Parallel(n_jobs=1)]: Done 778751 tasks      | elapsed:  2.2min\n[Parallel(n_jobs=1)]: Done 786257 tasks      | elapsed:  2.2min\n[Parallel(n_jobs=1)]: Done 793799 tasks      | elapsed:  2.2min\n[Parallel(n_jobs=1)]: Done 801377 tasks      | elapsed:  2.3min\n[Parallel(n_jobs=1)]: Done 808991 tasks      | elapsed:  2.3min\n[Parallel(n_jobs=1)]: Done 816641 tasks      | elapsed:  2.3min\n[Parallel(n_jobs=1)]: Done 824327 tasks      | elapsed:  2.3min\n[Parallel(n_jobs=1)]: Done 832049 tasks      | elapsed:  2.3min\n[Parallel(n_jobs=1)]: Done 839807 tasks      | elapsed:  2.4min\n[Parallel(n_jobs=1)]: Done 847601 tasks      | elapsed:  2.4min\n[Parallel(n_jobs=1)]: Done 855431 tasks      | elapsed:  2.4min\n[Parallel(n_jobs=1)]: Done 863297 tasks      | elapsed:  2.4min\n[Parallel(n_jobs=1)]: Done 871199 tasks      | elapsed:  2.5min\n[Parallel(n_jobs=1)]: Done 879137 tasks      | elapsed:  2.5min\n[Parallel(n_jobs=1)]: Done 887111 tasks      | elapsed:  2.5min\n[Parallel(n_jobs=1)]: Done 895121 tasks      | elapsed:  2.5min\n[Parallel(n_jobs=1)]: Done 903167 tasks      | elapsed:  2.6min\n[Parallel(n_jobs=1)]: Done 911249 tasks      | elapsed:  2.6min\n[Parallel(n_jobs=1)]: Done 919367 tasks      | elapsed:  2.6min\n[Parallel(n_jobs=1)]: Done 927521 tasks      | elapsed:  2.6min\n[Parallel(n_jobs=1)]: Done 935711 tasks      | elapsed:  2.6min\n[Parallel(n_jobs=1)]: Done 943937 tasks      | elapsed:  2.7min\n[Parallel(n_jobs=1)]: Done 952199 tasks      | elapsed:  2.7min\n[Parallel(n_jobs=1)]: Done 960497 tasks      | elapsed:  2.7min\n[Parallel(n_jobs=1)]: Done 968831 tasks      | elapsed:  2.7min\n[Parallel(n_jobs=1)]: Done 977201 tasks      | elapsed:  2.8min\n[Parallel(n_jobs=1)]: Done 985607 tasks      | elapsed:  2.8min\n[Parallel(n_jobs=1)]: Done 994049 tasks      | elapsed:  2.8min\n[Parallel(n_jobs=1)]: Done 1002527 tasks      | elapsed:  2.8min\n[Parallel(n_jobs=1)]: Done 1011041 tasks      | elapsed:  2.9min\n[Parallel(n_jobs=1)]: Done 1019591 tasks      | elapsed:  2.9min\n[Parallel(n_jobs=1)]: Done 1028177 tasks      | elapsed:  2.9min\n[Parallel(n_jobs=1)]: Done 1036799 tasks      | elapsed:  2.9min\n[Parallel(n_jobs=1)]: Done 1045457 tasks      | elapsed:  3.0min\n[Parallel(n_jobs=1)]: Done 1054151 tasks      | elapsed:  3.0min\n[Parallel(n_jobs=1)]: Done 1062881 tasks      | elapsed:  3.0min\n[Parallel(n_jobs=1)]: Done 1071647 tasks      | elapsed:  3.0min\n[Parallel(n_jobs=1)]: Done 1080449 tasks      | elapsed:  3.1min\n[Parallel(n_jobs=1)]: Done 1089287 tasks      | elapsed:  3.1min\n[Parallel(n_jobs=1)]: Done 1098161 tasks      | elapsed:  3.1min\n[Parallel(n_jobs=1)]: Done 1107071 tasks      | elapsed:  3.1min\n[Parallel(n_jobs=1)]: Done 1116017 tasks      | elapsed:  3.2min\n[Parallel(n_jobs=1)]: Done 1124999 tasks      | elapsed:  3.2min\n[Parallel(n_jobs=1)]: Done 1134017 tasks      | elapsed:  3.2min\n[Parallel(n_jobs=1)]: Done 1143071 tasks      | elapsed:  3.2min\n[Parallel(n_jobs=1)]: Done 1152161 tasks      | elapsed:  3.3min\n[Parallel(n_jobs=1)]: Done 1161287 tasks      | elapsed:  3.3min\n[Parallel(n_jobs=1)]: Done 1170449 tasks      | elapsed:  3.3min\n[Parallel(n_jobs=1)]: Done 1179647 tasks      | elapsed:  3.3min\n[Parallel(n_jobs=1)]: Done 1188881 tasks      | elapsed:  3.4min\n[Parallel(n_jobs=1)]: Done 1198151 tasks      | elapsed:  3.4min\n[Parallel(n_jobs=1)]: Done 1207457 tasks      | elapsed:  3.4min\n[Parallel(n_jobs=1)]: Done 1216799 tasks      | elapsed:  3.4min\n[Parallel(n_jobs=1)]: Done 1226177 tasks      | elapsed:  3.5min\n[Parallel(n_jobs=1)]: Done 1235591 tasks      | elapsed:  3.5min\n[Parallel(n_jobs=1)]: Done 1245041 tasks      | elapsed:  3.5min\n[Parallel(n_jobs=1)]: Done 1254527 tasks      | elapsed:  3.5min\n[Parallel(n_jobs=1)]: Done 1264049 tasks      | elapsed:  3.6min\n[Parallel(n_jobs=1)]: Done 1273607 tasks      | elapsed:  3.6min\n[Parallel(n_jobs=1)]: Done 1283201 tasks      | elapsed:  3.6min\n[Parallel(n_jobs=1)]: Done 1292831 tasks      | elapsed:  3.7min\n[Parallel(n_jobs=1)]: Done 1302497 tasks      | elapsed:  3.7min\n[Parallel(n_jobs=1)]: Done 1312199 tasks      | elapsed:  3.7min\n[Parallel(n_jobs=1)]: Done 1321937 tasks      | elapsed:  3.7min\n[Parallel(n_jobs=1)]: Done 1331711 tasks      | elapsed:  3.8min\n[Parallel(n_jobs=1)]: Done 1341521 tasks      | elapsed:  3.8min\n[Parallel(n_jobs=1)]: Done 1351367 tasks      | elapsed:  3.8min\n[Parallel(n_jobs=1)]: Done 1361249 tasks      | elapsed:  3.8min\n[Parallel(n_jobs=1)]: Done 1371167 tasks      | elapsed:  3.9min\n[Parallel(n_jobs=1)]: Done 1381121 tasks      | elapsed:  3.9min\n[Parallel(n_jobs=1)]: Done 1391111 tasks      | elapsed:  3.9min\n[Parallel(n_jobs=1)]: Done 1401137 tasks      | elapsed:  4.0min\n[Parallel(n_jobs=1)]: Done 1411199 tasks      | elapsed:  4.0min\n[Parallel(n_jobs=1)]: Done 1421297 tasks      | elapsed:  4.0min\n[Parallel(n_jobs=1)]: Done 1431431 tasks      | elapsed:  4.0min\n[Parallel(n_jobs=1)]: Done 1441601 tasks      | elapsed:  4.1min\n[Parallel(n_jobs=1)]: Done 1451807 tasks      | elapsed:  4.1min\n[Parallel(n_jobs=1)]: Done 1462049 tasks      | elapsed:  4.1min\n[Parallel(n_jobs=1)]: Done 1472327 tasks      | elapsed:  4.2min\n[Parallel(n_jobs=1)]: Done 1482641 tasks      | elapsed:  4.2min\n[Parallel(n_jobs=1)]: Done 1492991 tasks      | elapsed:  4.2min\n[Parallel(n_jobs=1)]: Done 1503377 tasks      | elapsed:  4.2min\n[Parallel(n_jobs=1)]: Done 1513799 tasks      | elapsed:  4.3min\n[Parallel(n_jobs=1)]: Done 1524257 tasks      | elapsed:  4.3min\n[Parallel(n_jobs=1)]: Done 1534751 tasks      | elapsed:  4.3min\n[Parallel(n_jobs=1)]: Done 1545281 tasks      | elapsed:  4.4min\n[Parallel(n_jobs=1)]: Done 1555847 tasks      | elapsed:  4.4min\n[Parallel(n_jobs=1)]: Done 1566449 tasks      | elapsed:  4.4min\n[Parallel(n_jobs=1)]: Done 1577087 tasks      | elapsed:  4.5min\n[Parallel(n_jobs=1)]: Done 1587761 tasks      | elapsed:  4.5min\n[Parallel(n_jobs=1)]: Done 1598471 tasks      | elapsed:  4.5min\n[Parallel(n_jobs=1)]: Done 1609217 tasks      | elapsed:  4.6min\n[Parallel(n_jobs=1)]: Done 1619999 tasks      | elapsed:  4.6min\n[Parallel(n_jobs=1)]: Done 1630817 tasks      | elapsed:  4.6min\n[Parallel(n_jobs=1)]: Done 1641671 tasks      | elapsed:  4.6min\n[Parallel(n_jobs=1)]: Done 1652561 tasks      | elapsed:  4.7min\n[Parallel(n_jobs=1)]: Done 1663487 tasks      | elapsed:  4.7min\n[Parallel(n_jobs=1)]: Done 1674449 tasks      | elapsed:  4.7min\n[Parallel(n_jobs=1)]: Done 1685447 tasks      | elapsed:  4.8min\n[Parallel(n_jobs=1)]: Done 1696481 tasks      | elapsed:  4.8min\n[Parallel(n_jobs=1)]: Done 1707551 tasks      | elapsed:  4.8min\n[Parallel(n_jobs=1)]: Done 1718657 tasks      | elapsed:  4.9min\n[Parallel(n_jobs=1)]: Done 1729799 tasks      | elapsed:  4.9min\n[Parallel(n_jobs=1)]: Done 1740977 tasks      | elapsed:  4.9min\n[Parallel(n_jobs=1)]: Done 1752191 tasks      | elapsed:  5.0min\n[Parallel(n_jobs=1)]: Done 1763441 tasks      | elapsed:  5.0min\n[Parallel(n_jobs=1)]: Done 1774727 tasks      | elapsed:  5.0min\n[Parallel(n_jobs=1)]: Done 1786049 tasks      | elapsed:  5.1min\n[Parallel(n_jobs=1)]: Done 1797407 tasks      | elapsed:  5.1min\n[Parallel(n_jobs=1)]: Done 1808801 tasks      | elapsed:  5.1min\n[Parallel(n_jobs=1)]: Done 1820231 tasks      | elapsed:  5.1min\n[Parallel(n_jobs=1)]: Done 1831697 tasks      | elapsed:  5.2min\n[Parallel(n_jobs=1)]: Done 1843199 tasks      | elapsed:  5.2min\n[Parallel(n_jobs=1)]: Done 1854737 tasks      | elapsed:  5.2min\n[Parallel(n_jobs=1)]: Done 1866311 tasks      | elapsed:  5.3min\n[Parallel(n_jobs=1)]: Done 1877921 tasks      | elapsed:  5.3min\n[Parallel(n_jobs=1)]: Done 1889567 tasks      | elapsed:  5.3min\n[Parallel(n_jobs=1)]: Done 1901249 tasks      | elapsed:  5.4min\n[Parallel(n_jobs=1)]: Done 1912967 tasks      | elapsed:  5.4min\n[Parallel(n_jobs=1)]: Done 1924721 tasks      | elapsed:  5.4min\n[Parallel(n_jobs=1)]: Done 1936511 tasks      | elapsed:  5.5min\n[Parallel(n_jobs=1)]: Done 1948337 tasks      | elapsed:  5.5min\n[Parallel(n_jobs=1)]: Done 1960199 tasks      | elapsed:  5.5min\n[Parallel(n_jobs=1)]: Done 1972097 tasks      | elapsed:  5.6min\n[Parallel(n_jobs=1)]: Done 1984031 tasks      | elapsed:  5.6min\n","output_type":"stream"},{"name":"stdout","text":"Fitting ICA to data using 129 channels (please be patient, this may take a while)\n","output_type":"stream"},{"name":"stderr","text":"/tmp/ipykernel_34/647814798.py:22: RuntimeWarning: The epochs you passed to ICA.fit() were baseline-corrected. However, we suggest to fit ICA only on data that has been high-pass filtered, but NOT baseline-corrected.\n  ica.fit(all_epochs)\n","output_type":"stream"},{"name":"stdout","text":"Selecting by number: 20 components\nFitting ICA took 119.1s.\nApplying ICA to Epochs instance\n","output_type":"stream"},{"name":"stderr","text":"/tmp/ipykernel_34/647814798.py:28: RuntimeWarning: The data you passed to ICA.apply() was baseline-corrected. Please note that ICA can introduce DC shifts, therefore you may wish to consider baseline-correcting the cleaned data again.\n  all_epochs = ica.apply(all_epochs)\n","output_type":"stream"},{"name":"stdout","text":"    Transforming to ICA space (20 components)\n    Zeroing out 2 ICA components\n    Projecting back using 129 PCA components\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x300 with 1 Axes>","image/png":""},"metadata":{}},{"name":"stdout","text":"    Using multitaper spectrum estimation with 7 DPSS windows\nPlotting power spectral density (dB=True).\nAveraging across epochs...\n","output_type":"stream"},{"name":"stderr","text":"/tmp/ipykernel_34/647814798.py:36: FutureWarning: The value of `amplitude='auto'` will be removed in MNE 1.8.0, and the new default will be `amplitude=False`.\n  fig_psd = psd.plot(average=True, spatial_colors=False)\n","output_type":"stream"},{"name":"stdout","text":"Error in plot_topomap: No digitization points found.\nNOTE: tfr_morlet() is a legacy function. New code should use .compute_tfr(method=\"morlet\").\n","output_type":"stream"},{"name":"stderr","text":"[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:  1.5min\n[Parallel(n_jobs=1)]: Done  71 tasks      | elapsed:  6.1min\n","output_type":"stream"},{"name":"stdout","text":"No baseline correction applied\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<MNELineFigure size 1000x350 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 2 Axes>","image/png":""},"metadata":{}},{"name":"stdout","text":"Overwriting existing file.\n","output_type":"stream"},{"name":"stderr","text":"/tmp/ipykernel_34/647814798.py:57: RuntimeWarning: This filename (/kaggle/working/mat_visuals/processed-epochs.fif) does not conform to MNE naming conventions. All epochs files should end with -epo.fif, -epo.fif.gz, _epo.fif or _epo.fif.gz\n  all_epochs.save(os.path.join(save_dir, 'processed-epochs.fif'), overwrite=True)\n","output_type":"stream"},{"name":"stdout","text":"Overwriting existing file.\nOverwriting existing file.\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Cell \u001b[0;32mIn[2], line 62\u001b[0m\n\u001b[1;32m     60\u001b[0m \u001b[38;5;66;03m# Save figures if needed\u001b[39;00m\n\u001b[1;32m     61\u001b[0m fig_psd\u001b[38;5;241m.\u001b[39msavefig(os\u001b[38;5;241m.\u001b[39mpath\u001b[38;5;241m.\u001b[39mjoin(save_dir, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mpsd_plot.png\u001b[39m\u001b[38;5;124m'\u001b[39m))\n\u001b[0;32m---> 62\u001b[0m \u001b[43mfig_topo\u001b[49m\u001b[38;5;241m.\u001b[39mplt\u001b[38;5;241m.\u001b[39msavefig(os\u001b[38;5;241m.\u001b[39mpath\u001b[38;5;241m.\u001b[39mjoin(save_dir, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtopomap_plot.png\u001b[39m\u001b[38;5;124m'\u001b[39m))\n\u001b[1;32m     63\u001b[0m fig_tfr\u001b[38;5;241m.\u001b[39mplt\u001b[38;5;241m.\u001b[39msavefig(os\u001b[38;5;241m.\u001b[39mpath\u001b[38;5;241m.\u001b[39mjoin(save_dir, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtfr_plot.png\u001b[39m\u001b[38;5;124m'\u001b[39m))\n","\u001b[0;31mNameError\u001b[0m: name 'fig_topo' is not defined"],"ename":"NameError","evalue":"name 'fig_topo' is not defined","output_type":"error"}]},{"cell_type":"code","source":"!git push","metadata":{"execution":{"iopub.status.busy":"2024-06-27T16:06:37.384832Z","iopub.execute_input":"2024-06-27T16:06:37.385655Z","iopub.status.idle":"2024-06-27T16:06:38.533805Z","shell.execute_reply.started":"2024-06-27T16:06:37.3856Z","shell.execute_reply":"2024-06-27T16:06:38.532702Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!git add --all","metadata":{"execution":{"iopub.status.busy":"2024-06-27T16:06:50.619523Z","iopub.execute_input":"2024-06-27T16:06:50.62038Z","iopub.status.idle":"2024-06-27T16:06:51.733355Z","shell.execute_reply.started":"2024-06-27T16:06:50.620341Z","shell.execute_reply":"2024-06-27T16:06:51.73198Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!git commit -m \"second commit\"","metadata":{"execution":{"iopub.status.busy":"2024-06-27T16:07:15.486654Z","iopub.execute_input":"2024-06-27T16:07:15.487077Z","iopub.status.idle":"2024-06-27T16:07:16.633795Z","shell.execute_reply.started":"2024-06-27T16:07:15.487039Z","shell.execute_reply":"2024-06-27T16:07:16.632518Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!zip -r all-visual-text-data.zip /kaggle/working/visual_output_preproccessed_text_data","metadata":{"execution":{"iopub.status.busy":"2024-07-02T17:34:47.561827Z","iopub.execute_input":"2024-07-02T17:34:47.562831Z","iopub.status.idle":"2024-07-02T17:34:49.223993Z","shell.execute_reply.started":"2024-07-02T17:34:47.562787Z","shell.execute_reply":"2024-07-02T17:34:49.221603Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!zip -r all-raw-ERP-visual-data.zip /kaggle/working/visual_output_preproccessed_raw_ERP_data","metadata":{"execution":{"iopub.status.busy":"2024-07-02T17:38:54.014664Z","iopub.execute_input":"2024-07-02T17:38:54.015905Z","iopub.status.idle":"2024-07-02T17:38:55.424522Z","shell.execute_reply.started":"2024-07-02T17:38:54.015862Z","shell.execute_reply":"2024-07-02T17:38:55.422998Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!zip -r all-plotting-output-without-audio-data.zip /kaggle/working/","metadata":{"execution":{"iopub.status.busy":"2024-06-29T13:33:20.72866Z","iopub.execute_input":"2024-06-29T13:33:20.729467Z","iopub.status.idle":"2024-06-29T13:46:09.196196Z","shell.execute_reply.started":"2024-06-29T13:33:20.72944Z","shell.execute_reply":"2024-06-29T13:46:09.195207Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!zip -r all-128-channel-resting-visualization.zip /kaggle/working/mat_visuals","metadata":{"execution":{"iopub.status.busy":"2024-07-02T17:50:57.92853Z","iopub.execute_input":"2024-07-02T17:50:57.929092Z","iopub.status.idle":"2024-07-02T17:53:11.70486Z","shell.execute_reply.started":"2024-07-02T17:50:57.929056Z","shell.execute_reply":"2024-07-02T17:53:11.703187Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!ls ","metadata":{"execution":{"iopub.status.busy":"2024-07-05T15:07:29.642666Z","iopub.execute_input":"2024-07-05T15:07:29.642938Z","iopub.status.idle":"2024-07-05T15:07:30.72668Z","shell.execute_reply.started":"2024-07-05T15:07:29.642914Z","shell.execute_reply":"2024-07-05T15:07:30.72541Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"all-128-channel-resting-visualization.zip\nall-plotting-output-without-audio-data.zip\nall-raw-ERP-visual-data.zip\nall-visual-text-data.zip\nmat_visuals\nstate.db\nvisual_output_preproccessed_raw_ERP_data\nvisual_output_preproccessed_text_data\n","output_type":"stream"}]},{"cell_type":"code","source":"from IPython.display import FileLink\nFileLink(r'all-128-channel-resting-visualization.zip')","metadata":{"execution":{"iopub.status.busy":"2024-07-03T17:29:51.630041Z","iopub.execute_input":"2024-07-03T17:29:51.630765Z","iopub.status.idle":"2024-07-03T17:29:51.646024Z","shell.execute_reply.started":"2024-07-03T17:29:51.630724Z","shell.execute_reply":"2024-07-03T17:29:51.644522Z"},"trusted":true},"execution_count":null,"outputs":[]}]}